syntax = "proto3";
package pain.core.manusya;

import "pain/core/common.proto";

option cc_generic_services = true;

message ChunkOptions {
  bool append_out_of_order = 1;
  bool digest = 2;
};

enum ChunkState {
  CHUNK_STATE_INIT = 0;
  CHUNK_STATE_OPEN = 1;
  CHUNK_STATE_SEALED = 2;
};

message CreateChunkRequest {
  ChunkOptions chunk_options = 1;
};

message CreateChunkResponse {
  UUID uuid = 1;
};

message AppendChunkRequest {
  UUID uuid = 1;
  uint64 offset = 2;
  uint32 length = 3;
  uint32 digest = 4;
};

message AppendChunkResponse {
  uint64 offset = 1;
};

message SealChunkRequest {
  UUID uuid = 1;
};

message SealChunkResponse {};

message RemoveChunkRequest {
  UUID uuid = 1;
};

message RemoveChunkResponse {};

message ListChunkRequest {
  UUID start = 1;
  uint32 limit = 2;
};

message ListChunkResponse {
  repeated UUID uuids = 1;
};

message ReadChunkRequest {
  UUID uuid = 1;
  uint64 offset = 2;
  uint32 length = 3;
};

message ReadChunkResponse {
  uint64 offset = 1;
  uint32 length = 2;
  uint32 digest = 3;
};

message QueryChunkRequest {
  UUID uuid = 1;
};

message QueryChunkResponse {
  ChunkOptions chunk_options = 1;
  uint64 size = 2;
  ChunkState chunk_state = 3;
  repeated Pair attrs = 4;
};

service ManusyaService {
  rpc create_chunk(CreateChunkRequest) returns (CreateChunkResponse);
  rpc append_chunk(AppendChunkRequest) returns (AppendChunkResponse);
  rpc seal_chunk(SealChunkRequest) returns (SealChunkResponse);
  rpc remove_chunk(RemoveChunkRequest) returns (RemoveChunkResponse);
  rpc list_chunk(ListChunkRequest) returns (ListChunkResponse);
  rpc read_chunk(ReadChunkRequest) returns (ReadChunkResponse);
  rpc query_chunk(QueryChunkRequest) returns (QueryChunkResponse);
};
